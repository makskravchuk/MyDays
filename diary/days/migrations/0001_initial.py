# Generated by Django 5.0.4 on 2024-04-19 21:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Day",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "image_title",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/days_image_titles/"
                    ),
                ),
                ("text_description", models.TextField(blank=True, null=True)),
                (
                    "feeling",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "відмінне"),
                            ("good", "добре"),
                            ("average", "середнє"),
                            ("poor", "погане"),
                            ("critical", "критичне"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[("public", "публічний"), ("private", "приватний")],
                        default="private",
                        max_length=10,
                    ),
                ),
                (
                    "day_type",
                    models.CharField(
                        choices=[
                            ("special", "особливий"),
                            ("successful", "успішний"),
                            ("ordinary", "звичайний"),
                            ("boring", "нудний"),
                            ("bad", "поганий"),
                        ],
                        default="ordinary",
                        max_length=15,
                    ),
                ),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "date")},
            },
        ),
        migrations.CreateModel(
            name="Conclusion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LifeLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MediaContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("image", "image"),
                            ("video", "video"),
                            ("audio", "audio"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                ("file", models.FileField(upload_to="days/media_files/")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Mood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "morning_mood",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("happy", "щасливий"),
                            ("in_love", "закоханий"),
                            ("confident", "впевнений"),
                            ("playful", "грайливий"),
                            ("distressed", "збентежений"),
                            ("indifferent", "байдужий"),
                            ("angry", "злий"),
                            ("fearful", "наляканий"),
                            ("sad", "сумний"),
                            ("desperate", "відчай"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "noon_mood",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("happy", "щасливий"),
                            ("in_love", "закоханий"),
                            ("confident", "впевнений"),
                            ("playful", "грайливий"),
                            ("distressed", "збентежений"),
                            ("indifferent", "байдужий"),
                            ("angry", "злий"),
                            ("fearful", "наляканий"),
                            ("sad", "сумний"),
                            ("desperate", "відчай"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "evening_mood",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("happy", "щасливий"),
                            ("in_love", "закоханий"),
                            ("confident", "впевнений"),
                            ("playful", "грайливий"),
                            ("distressed", "збентежений"),
                            ("indifferent", "байдужий"),
                            ("angry", "злий"),
                            ("fearful", "наляканий"),
                            ("sad", "сумний"),
                            ("desperate", "відчай"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "night_mood",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("happy", "щасливий"),
                            ("in_love", "закоханий"),
                            ("confident", "впевнений"),
                            ("playful", "грайливий"),
                            ("distressed", "збентежений"),
                            ("indifferent", "байдужий"),
                            ("angry", "злий"),
                            ("fearful", "наляканий"),
                            ("sad", "сумний"),
                            ("desperate", "відчай"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "day",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MusicalComposition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=50)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RelatedPerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=250)),
                ("execution_time", models.TimeField()),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisitedPlace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("longitude", models.FloatField()),
                ("latitude", models.FloatField()),
                ("title", models.CharField(max_length=70)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Weather",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min_temperature", models.IntegerField()),
                ("max_temperature", models.IntegerField()),
                ("description", models.CharField(max_length=30)),
                ("icon_url", models.URLField()),
                (
                    "day",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="days.day"
                    ),
                ),
            ],
        ),
    ]
